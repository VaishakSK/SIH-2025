<style>
  .notification-container {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 10000;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  .toast {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 14px;
    border-radius: 8px;
    background: #fff;
    box-shadow: 0 5px 20px rgba(0,0,0,0.1);
    border-left: 4px solid;
    width: 320px;
    transform: translateX(120%);
    transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
    animation: slideIn 0.4s forwards;
  }
  @keyframes slideIn {
    to { transform: translateX(0); }
  }
  .toast.success { border-color: #22c55e; }
  .toast.error { border-color: #ef4444; }
  .toast.info { border-color: #3b82f6; }
  .toast-icon { width: 20px; height: 20px; }
  .toast.success .toast-icon { color: #22c55e; }
  .toast.error .toast-icon { color: #ef4444; }
  .toast.info .toast-icon { color: #3b82f6; }
  .toast-message { flex: 1; font-weight: 600; font-size: 14px; }
  .toast-close {
    cursor: pointer;
    background: transparent;
    border: none;
    color: #9ca3af;
  }
</style>

<div id="notification-container" class="notification-container"></div>

<script>
  function showNotification(message, type = 'info', duration = 5000) {
    const container = document.getElementById('notification-container');
    if (!container) return;

    const toast = document.createElement('div');
    toast.className = `toast ${type}`;

    const icons = {
      success: `<svg fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/></svg>`,
      error: `<svg fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"/></svg>`,
      info: `<svg fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/></svg>`
    };

    toast.innerHTML = `
      <div class="toast-icon">${icons[type] || icons['info']}</div>
      <div class="toast-message">${message}</div>
      <button class="toast-close">&times;</button>
    `;

    container.appendChild(toast);

    const closeButton = toast.querySelector('.toast-close');
    closeButton.addEventListener('click', () => {
      toast.remove();
    });

    if (duration) {
      setTimeout(() => {
        toast.remove();
      }, duration);
    }
  }
</script>
